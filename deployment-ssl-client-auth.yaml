apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaUser
metadata:
  name: kafka-test-apps-producer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Write
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Create
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Describe
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaUser
metadata:
  name: kafka-test-apps-consumer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Read
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Describe
      - resource:
          type: group
          name: my-kafka-consumer
        operation: Read
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: kafka-test-apps
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 3
  config:
      retention.bytes: 1073741824
      retention.ms: 86400000
      segment.bytes: 1073741824
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kafka-producer
  name: kafka-producer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      initContainers:
        - name: tls-init
          image: scholzj/java-tls-init:latest
          env:
            - name: CA_CRT
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.crt
            - name: USER_CRT
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-producer
                  key: user.crt
            - name: USER_KEY
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-producer
                  key: user.key
            - name: TRUSTSTORE_FILE
              value: /tls-certs/truststore.p12
            - name: TRUSTSTORE_PASSWORD_FILE
              value: /tls-certs/truststore.password
            - name: KEYSTORE_FILE
              value: /tls-certs/keystore.p12
            - name: KEYSTORE_PASSWORD_FILE
              value: /tls-certs/keystore.password
          volumeMounts:
            - mountPath: /tls-certs
              name: tls-certs
      containers:
        - name: kafka-producer
          image: scholzj/quarkus-kafka-producer:latest
          env:
            - name: TRUSTSTORE_FILE
              value: /tls-certs/truststore.p12
            - name: TRUSTSTORE_PASSWORD_FILE
              value: /tls-certs/truststore.password
            - name: KEYSTORE_FILE
              value: /tls-certs/keystore.p12
            - name: KEYSTORE_PASSWORD_FILE
              value: /tls-certs/keystore.password
            - name: SMALLRYE_MESSAGING_SINK_TEST_TOPIC_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: SMALLRYE_MESSAGING_SINK_TEST_TOPIC_TOPIC
              value: kafka-test-apps
          volumeMounts:
            - mountPath: /tls-certs
              name: tls-certs
      volumes:
        - name: tls-certs
          emptyDir:
            medium: Memory
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kafka-consumer
  name: kafka-consumer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-consumer
    spec:
      initContainers:
        - name: tls-init
          image: scholzj/java-tls-init:latest
          env:
            - name: CA_CRT
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.crt
            - name: USER_CRT
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-consumer
                  key: user.crt
            - name: USER_KEY
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-consumer
                  key: user.key
            - name: TRUSTSTORE_FILE
              value: /tls-certs/truststore.p12
            - name: TRUSTSTORE_PASSWORD_FILE
              value: /tls-certs/truststore.password
            - name: KEYSTORE_FILE
              value: /tls-certs/keystore.p12
            - name: KEYSTORE_PASSWORD_FILE
              value: /tls-certs/keystore.password
          volumeMounts:
            - mountPath: /tls-certs
              name: tls-certs
      containers:
        - name: kafka-consumer
          image: scholzj/quarkus-kafka-consumer:latest
          env:
            - name: TRUSTSTORE_FILE
              value: /tls-certs/truststore.p12
            - name: TRUSTSTORE_PASSWORD_FILE
              value: /tls-certs/truststore.password
            - name: KEYSTORE_FILE
              value: /tls-certs/keystore.p12
            - name: KEYSTORE_PASSWORD_FILE
              value: /tls-certs/keystore.password
            - name: SMALLRYE_MESSAGING_SOURCE_TEST_TOPIC_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: SMALLRYE_MESSAGING_SOURCE_TEST_TOPIC_TOPIC
              value: kafka-test-apps
            - name: SMALLRYE_MESSAGING_SOURCE_TEST_TOPIC_GROUP_ID
              value: kafka-test-apps
          volumeMounts:
            - mountPath: /tls-certs
              name: tls-certs
      volumes:
        - name: tls-certs
          emptyDir:
            medium: Memory